syntax = "proto2";

package src.controls;

message Sensors {
  required double time               = 1;
  required bool gps_fix              = 2;  // (http://docs.ros.org/api/sensor_msgs/html/msg/NavSatStatus.html)
  required double latitude           = 3;  // degrees (http://docs.ros.org/api/sensor_msgs/html/msg/NavSatFix.html)
  required double longitude          = 4;  // degrees (link above)
  required float altitude            = 5;  // meters above MSL (mean sea level) (http://docs.ros.org/api/mavros_msgs/html/msg/Altitude.html)
  required float relative_altitude   = 6;  // meters above home position (link above)
  required float heading             = 7;  // degrees clockwise from north (http://wiki.ros.org/mavros#mavros.2BAC8-Plugins.global_position)
  required float velocity_x          = 8;  // m/s (https://mavlink.io/en/messages/common.html#LOCAL_POSITION_NED)
  required float velocity_y          = 9;  // m/s (link above)
  required float velocity_z          = 10; // m/s (link above)
  required float gps_ground_speed    = 11; // m/s (http://docs.ros.org/api/mavros_msgs/html/msg/VFR_HUD.html)
  required int32 gps_satellite_count = 12; // (https://mavlink.io/en/messages/common.html#GPS_RAW_INT, https://github.com/mavlink/mavros/blob/a7ef4fc0ec153307cbce3c98a998956c6296b954/mavros/src/plugins/global_position.cpp#L427)
  required float gps_eph             = 13; // meters (horizontal position uncertainty) (see ros_to_proto.cc for explanation)
  required float gps_epv             = 14; // meters (vertical position uncertainty) (see ros_to_proto.cc for explanation)
  required float accelerometer_x     = 15; // m/s^2 (http://docs.ros.org/api/sensor_msgs/html/msg/Imu.html)
  required float accelerometer_y     = 16; // m/s^2 (link above)
  required float accelerometer_z     = 17; // m/s^2 (link above)
  required float gyro_x              = 18; // rad/sec (link above)
  required float gyro_y              = 19; // rad/sec (link above)
  required float gyro_z              = 20; // rad/sec (link above)
  required float roll                = 21; // radians to the right (see ros_to_proto.cc)
  required float pitch               = 22; // radians downward (see ros_to_proto.cc)
  required float yaw                 = 23; // radians counterclockwise from east (see ros_to_proto.cc)
  required float battery_voltage     = 24; // Volts (http://docs.ros.org/api/sensor_msgs/html/msg/BatteryState.html)
  required float battery_current     = 25; // A (negative when discharging) (link above)
  required bool armed                = 26; // (http://docs.ros.org/api/mavros_msgs/html/msg/State.html)
  required string autopilot_state    = 27; // (link above)
  required float home_altitude       = 28; // Home position altitude in MSL
}

message Goal {
  required bool run_mission = 1;
}

message Output {
  required int32 state                 = 1;
  required double flight_time          = 2;
  required int32 current_command_index = 3;
  required bool send_offboard          = 4;
  required float setpoint_latitude     = 5;
  required float setpoint_longitude    = 6;
  required float setpoint_altitude     = 7;
  required float setpoint_yaw          = 8;
  required float gimbal_angle          = 9;
  required bool bomb_drop              = 10;
  required bool alarm                  = 11;
  required bool dslr                   = 12;
  required bool trigger_takeoff        = 13;
  required bool trigger_hold           = 14;
  required bool trigger_offboard       = 15;
  required bool trigger_rtl            = 16;
  required bool trigger_land           = 17;
  required bool trigger_arm            = 18;
  required bool trigger_disarm         = 19;
}

message UgvSensors {
  required double time      = 1;
  required double latitude  = 2;
  required double longitude = 3;
  required double altitude  = 4;
}

message UasMessage {
  optional double time = 1;

  oneof payload {
    Sensors sensors    = 2;
    Goal goal          = 3;
    Output output      = 4;
  }
}

message AlarmSequence {
  repeated float on_off_cycles = 1;
}
